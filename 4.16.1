using System;
using System.IO;
using System.Linq;

static class ProgramExtensions
{
    public static void FilterNumbersAndPrint(this int[] numbers, int lowerBound, int upperBound)
    {
        var outsideRange = numbers.Where(num => num < lowerBound || num > upperBound)
                                  .OrderByDescending(num => num)
                                  .ToArray();


        // Запись чисел из массива в файл в одну строку, разделенную пробелами
        string outputFilePath = "output.txt";
        File.WriteAllText(outputFilePath, string.Join(" ", outsideRange)); // Запись чисел в файл

        Console.WriteLine("Данные записаны в файл 'output.txt'.");
    }
}

class Program
{
    static void Main()
    {
        int a = 5; // Нижняя граница отрезка
        int b = 10; // Верхняя граница отрезка

        string filePath = "numbers.txt"; // Путь к файлу с числами

        try
        {
            int[] numbers = File.ReadAllText(filePath) // Чтение всего текста из файла
                                .Split(new[] { ' ', '\t', '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries) // Разделение текста на отдельные числа
                                .Select(int.Parse) // Преобразование строк в числа типа int
                                .ToArray(); // Преобразование последовательности в массив чисел

            numbers.FilterNumbersAndPrint(a, b); // Использование метода расширения для фильтрации чисел и вывода на консоль
        }
        catch (FileNotFoundException ex)
        {
            Console.WriteLine($"Файл '{filePath}' не найден: {ex.Message}");
        }
        catch (FormatException ex)
        {
            Console.WriteLine($"Невозможно преобразовать строку в число: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Произошла ошибка: {ex.Message}");
        }
    }
}
