from typing import List, Tuple

def L(x: float, f: List[Tuple[float, float]]) -> float:
  sum = 0
  for i in range(len(f)):
    res = f[i][1]
    for j in range(len(f)):
      if i == j:
        continue
      res *= (x - f[j][0])
      res /= (f[i][0] - f[j][0])
    sum += res
  return sum

def solve():
  f = [(0, 2), (1, 3), (2, 10), (3, 29)]
  print("x:", end="\t")
  for x, _ in f:
    print(x, end="\t")
  print()
  print("y:", end="\t")
  for _, y in f:
    print(y, end="\t")
  print("\n")

  points: List[float] = []
  for i in range(len(f) - 1):
    points.append(f[i][0])
    points.append((f[i][0] + f[i + 1][0]) / 2)
  points.append(f[-1][0])

  print("x:", end="\t")
  for x in points:
    print(x, end="\t")
  print()
  print("L(x):", end="\t")
  for x in points:
    print(L(x, f), end="\t")
  print()

if __name__ == "__main__":
  solve()
