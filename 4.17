using System;

class Rectangle
{
    private int a, b;

    public Rectangle(int sideA, int sideB) : this()
    {
        this.a = sideA;
        this.b = sideB;
    }

    public Rectangle()
    {
    }

    public int SideA
    {
        get { return a; }
        set { a = value; }
    }

    public int SideB
    {
        get { return b; }
        set { b = value; }
    }

    public void PrintSides()
    {
        Console.WriteLine($"Длина стороны a: {a}, Длина стороны b: {b}");
    }

    public int CalculatePerimeter()
    {
        return 2 * (a + b);
    }

    public int CalculateArea()
    {
        return a * b;
    }

    public int this[int index]
    {
        get
        {
            if (index == 0)
                return a;
            else if (index == 1)
                return b;
            else
            {
                Console.WriteLine("Ошибка: Недопустимый индекс!");
                return -1;
            }
        }
        set
        {
            if (index == 0)
                a = value;
            else if (index == 1)
                b = value;
            else
                Console.WriteLine("Ошибка: Недопустимый индекс!");
        }
    }

    public bool IsSquare => a == b;

    // Перегрузка оператора инкремента (++rect)
    public static Rectangle operator ++(Rectangle rect)
    {
        rect.a++;
        rect.b++;
        return rect;
    }

    // Перегрузка оператора декремента (--rect)
    public static Rectangle operator --(Rectangle rect)
    {
        rect.a--;
        rect.b--;
        return rect;
    }

    // Перегрузка оператора умножения (*)
    public static Rectangle operator *(Rectangle rect, int scalar)
    {
        rect.a *= scalar;
        rect.b *= scalar;
        return rect;
    }

    // Перегрузка констант true и false
    public static implicit operator bool(Rectangle rect)
    {
        return rect.IsSquare;
    }
}

class Program
{
    static void Main()
    {
        Rectangle rect = new Rectangle(5, 5);

        rect.PrintSides();
        Console.WriteLine($"Периметр: {rect.CalculatePerimeter()}");
        Console.WriteLine($"Площадь: {rect.CalculateArea()}");
        Console.WriteLine($"Это квадрат? {(rect ? "Да" : "Нет")}");

        rect.SideA = 6;
        rect.SideB = 4;
        Console.WriteLine("После изменения сторон:");
        rect.PrintSides();
        Console.WriteLine($"Доступ к сторонам по индексу: {rect[0]}, {rect[1]}");

        ++rect;
        Console.WriteLine("После инкремента:");
        rect.PrintSides();

        --rect; // Перегрузка оператора декремента
        Console.WriteLine("После декремента:");
        rect.PrintSides();
        
        Rectangle rectMultiplied = rect * 2;
        Console.WriteLine("После умножения на 2:");
        rectMultiplied.PrintSides();
    }
}
